package multi;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;

public class RoomManager {

	private static List roomList;
	private static AtomicInteger atomicInteger; // can synchronize in thread.
	
	static { // set static parameter
		roomList = new ArrayList();
		atomicInteger = new AtomicInteger();
	}
	
	public RoomManager() { // default constructor
		
	}
	
	public static Room createRoom() { // create room
		int roomID = atomicInteger.incrementAndGet();
		Room room = new Room(roomID);
		roomList.add(room);
		
		System.out.println("Create Room!");
		
		return room;
	}
	
    public static GameRoom createRoom(GameUser owner) { // user create room for room owner
        int roomId = atomicInteger.incrementAndGet();// room id Ã¤¹ø

        GameRoom room = new GameRoom(roomId);
        room.enterUser(owner);
        room.setOwner(owner);

        roomList.add(room);
        System.out.println("Room Created!");
        return room;
    }
}
